version: '3.8'

services:
  saqqara-workflow:
    build:
      context: ./apps/saqqara-workflow
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=production
      - RHODIUM_VERIFICATION_ENDPOINT=${RHODIUM_VERIFICATION_ENDPOINT}
      - ANCIENT_WISDOM_DB_URL=${ANCIENT_WISDOM_DB_URL}
    depends_on:
      - postgres
      - redis
    networks:
      - gtek-network

  polystack-ide:
    build:
      context: ./apps/polystack-ide
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SAMSUNG_DEV_KEY=${SAMSUNG_DEV_KEY}
    volumes:
      - ide-workspace:/app/workspace
    networks:
      - gtek-network

  gdatanomocs-api:
    build:
      context: ./apps/gdatanomocs
      dockerfile: Dockerfile.api
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - KNOX_API_KEY=${KNOX_API_KEY}
      - RHODIUM_POOL_CONTRACT=${RHODIUM_POOL_CONTRACT}
      - GUERILLA_LANGUAGE_SERVICE=${GUERILLA_LANGUAGE_SERVICE}
    depends_on:
      - postgres
      - redis
    networks:
      - gtek-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=gtek_ecosystem
      - POSTGRES_USER=${POSTGRES_USER:-gtek_admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - gtek-network

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gtek-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./deployment/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - saqqara-workflow
      - polystack-ide
      - gdatanomocs-api
    networks:
      - gtek-network

volumes:
  postgres_data:
  redis_data:
  ide-workspace:

networks:
  gtek-network:
    driver: bridge
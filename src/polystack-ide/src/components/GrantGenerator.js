/**
 * Grant Generator Component
 * AI-powered grant proposal generation
 */

import React, { useState } from 'react';
import './GrantGenerator.css';

const GrantGenerator = ({ onClose, projectCode }) => {
  const [grantType, setGrantType] = useState('research');
  const [projectTitle, setProjectTitle] = useState('');
  const [projectDescription, setProjectDescription] = useState('');
  const [fundingAmount, setFundingAmount] = useState('');
  const [generatedProposal, setGeneratedProposal] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);

  const grantTypes = [
    { id: 'research', name: 'Research & Development' },
    { id: 'innovation', name: 'Innovation Grant' },
    { id: 'startup', name: 'Startup Funding' },
    { id: 'academic', name: 'Academic Research' },
    { id: 'nonprofit', name: 'Non-Profit Initiative' },
    { id: 'technology', name: 'Technology Development' },
  ];

  const generateProposal = async () => {
    setIsGenerating(true);
    
    // Simulate AI generation with realistic delay
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    const proposal = `
# ${projectTitle || 'Innovative Technology Project'}

## Executive Summary

This proposal outlines an innovative project leveraging cutting-edge technology to address critical challenges in the ${grantType} sector. Our team seeks $${fundingAmount || '100,000'} in funding to develop and implement a comprehensive solution that will deliver measurable impact.

## Project Description

${projectDescription || 'Our project utilizes advanced AI and blockchain technologies to create a revolutionary platform that transforms how organizations operate and deliver value to their stakeholders.'}

## Technical Approach

Based on our codebase analysis, this project will implement:

- **AI-Native Architecture**: Leveraging machine learning algorithms for intelligent automation
- **Blockchain Integration**: Ensuring transparency and security in all transactions
- **Scalable Infrastructure**: Built on modern cloud-native technologies
- **User-Centric Design**: Intuitive interfaces designed for maximum usability

## Code Analysis

Our current implementation includes:
\`\`\`
${projectCode.substring(0, 200)}...
\`\`\`

This demonstrates our technical capabilities and commitment to high-quality development practices.

## Budget Breakdown

- **Personnel (60%)**: $${Math.floor((parseInt(fundingAmount) || 100000) * 0.6).toLocaleString()}
- **Technology & Infrastructure (25%)**: $${Math.floor((parseInt(fundingAmount) || 100000) * 0.25).toLocaleString()}
- **Operations & Marketing (10%)**: $${Math.floor((parseInt(fundingAmount) || 100000) * 0.1).toLocaleString()}
- **Contingency (5%)**: $${Math.floor((parseInt(fundingAmount) || 100000) * 0.05).toLocaleString()}

## Timeline

**Phase 1 (Months 1-3)**: Foundation & Core Development
- Architecture design and setup
- Core functionality implementation
- Initial testing and validation

**Phase 2 (Months 4-6)**: Advanced Features & Integration
- AI component integration
- Blockchain implementation
- Security hardening

**Phase 3 (Months 7-9)**: Testing & Optimization
- Comprehensive testing
- Performance optimization
- User acceptance testing

**Phase 4 (Months 10-12)**: Deployment & Launch
- Production deployment
- User onboarding
- Impact measurement

## Expected Outcomes

1. **Innovation Impact**: Revolutionary approach to ${grantType}
2. **Technical Excellence**: State-of-the-art implementation
3. **Social Benefit**: Positive impact on target community
4. **Economic Value**: Sustainable business model
5. **Knowledge Transfer**: Open-source contributions

## Team Qualifications

Our team brings together experts in:
- AI/Machine Learning
- Blockchain Technology
- Software Engineering
- Project Management
- Domain Expertise in ${grantType}

## Conclusion

This project represents a unique opportunity to advance the field of ${grantType} through innovative technology. With the requested funding, we will deliver a solution that creates lasting value and sets new standards for excellence.

We appreciate your consideration and look forward to discussing this proposal further.

---

*Generated by gTek PolyStack IDE AI Grant Generator*
*Date: ${new Date().toLocaleDateString()}*
`;

    setGeneratedProposal(proposal);
    setIsGenerating(false);
  };

  const downloadProposal = () => {
    const element = document.createElement('a');
    const file = new Blob([generatedProposal], { type: 'text/plain' });
    element.href = URL.createObjectURL(file);
    element.download = `grant-proposal-${projectTitle.replace(/\s+/g, '-').toLowerCase()}.md`;
    document.body.appendChild(element);
    element.click();
    document.body.removeChild(element);
  };

  return (
    <div className="grant-generator">
      <div className="grant-header">
        <h2>ðŸŽ¯ AI Grant Generator</h2>
        <button className="close-btn" onClick={onClose}>Ã—</button>
      </div>

      <div className="grant-content">
        {!generatedProposal ? (
          <div className="grant-form">
            <div className="form-group">
              <label>Grant Type</label>
              <select value={grantType} onChange={(e) => setGrantType(e.target.value)}>
                {grantTypes.map(type => (
                  <option key={type.id} value={type.id}>{type.name}</option>
                ))}
              </select>
            </div>

            <div className="form-group">
              <label>Project Title</label>
              <input
                type="text"
                value={projectTitle}
                onChange={(e) => setProjectTitle(e.target.value)}
                placeholder="Enter your project title..."
              />
            </div>

            <div className="form-group">
              <label>Project Description</label>
              <textarea
                value={projectDescription}
                onChange={(e) => setProjectDescription(e.target.value)}
                placeholder="Describe your project goals and objectives..."
                rows={4}
              />
            </div>

            <div className="form-group">
              <label>Funding Amount ($)</label>
              <input
                type="number"
                value={fundingAmount}
                onChange={(e) => setFundingAmount(e.target.value)}
                placeholder="100000"
              />
            </div>

            <button 
              className="generate-btn" 
              onClick={generateProposal}
              disabled={isGenerating}
            >
              {isGenerating ? 'ðŸ¤– Generating Proposal...' : 'âœ¨ Generate Grant Proposal'}
            </button>
          </div>
        ) : (
          <div className="grant-result">
            <div className="result-header">
              <h3>Generated Grant Proposal</h3>
              <div className="result-actions">
                <button className="download-btn" onClick={downloadProposal}>
                  ðŸ“¥ Download
                </button>
                <button className="new-btn" onClick={() => setGeneratedProposal('')}>
                  ðŸ”„ Generate New
                </button>
              </div>
            </div>
            <div className="proposal-preview">
              <pre>{generatedProposal}</pre>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default GrantGenerator;